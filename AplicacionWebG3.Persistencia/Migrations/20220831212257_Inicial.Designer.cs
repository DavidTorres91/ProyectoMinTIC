// <auto-generated />
using System;
using AplicacionWebG3.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AplicacionWebG3.Persistencia.Migrations
{
    [DbContext(typeof(AppC))]
    [Migration("20220831212257_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AplicacionWebG3.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Contacto")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaNacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SisPago")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("AplicacionWebG3.Dominio.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumentos");
                });

            modelBuilder.Entity("AplicacionWebG3.Dominio.Profesional", b =>
                {
                    b.HasBaseType("AplicacionWebG3.Dominio.Persona");

                    b.Property<string>("Calendario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Licencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumLicencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("expLicencia")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Profesional");
                });

            modelBuilder.Entity("AplicacionWebG3.Dominio.Usuario", b =>
                {
                    b.HasBaseType("AplicacionWebG3.Dominio.Persona");

                    b.Property<string>("Calendario")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Usuario_Calendario");

                    b.Property<string>("Servicio")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Usuario");
                });

            modelBuilder.Entity("AplicacionWebG3.Dominio.Persona", b =>
                {
                    b.HasOne("AplicacionWebG3.Dominio.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId");

                    b.Navigation("TipoDocumento");
                });
#pragma warning restore 612, 618
        }
    }
}
